<%=
[
  {
    id: "current-state-in-event-sourcing",
    title: "CurrentState in Event Sourcing",
    image: s3_url('blog/current-state-in-event-sourcing/preview.jpg'),
    preview: "My experience of building an app with ES as a main data source.",
  },
  {
    id: "releasing-npm-module",
    title: "Releasing an NPM module",
    image: s3_url('blog/releasing-npm-module/preview.jpg'),
    preview: "Covering as much possible usecases of an npm module by making it pluggable.",
  },
  {
    id: "di-in-ruby",
    title: "Dependency Injection in Ruby",
    image: s3_url('blog/di-in-ruby/preview.jpg'),
    preview: "While searching for a perfect solution to a DI problem in Ruby, I developed my own Dependency Injection technique.",
  },
  {
    id: "starbucket-reintroduce-distributed-aspect-of-git",
    title: "Starbucket - reintroduce the \"distributed\" aspect of Git",
    image: s3_url('blog/starbucket-reintroduce-distributed-aspect-of-git/preview.jpg'),
    preview: "My NodeJS side-project: \"Quickly create a dynamic, distributed and auto-syncing git server in a local network.\"",
  },
  {
    id: "redux-thunk-and-why-i-dont-use-it",
    title: "Redux Thunk and why I don't use it anymore.",
    image: s3_url('blog/redux-thunk-and-why-i-dont-use-it/preview.jpg'),
    preview: "Sharing my point of view about pros and cons of the React Thunk middleware.",
  },
  {
    id: "its-all-about-trade-offs",
    title: "It is all about trade-offs",
    image: s3_url('blog/its-all-about-trade-offs/preview.jpg'),
    preview: "As programmers we often blindly follow some technology without looking at benefits/costs balance of provided solutions.",
  },
  {
    id: "static-middleman-page-dynamic-react-admin-panel-and-heroku-redeployments",
    title: "Static Middleman Page, Dynamic React Admin Panel and Heroku Redeployments",
    image: s3_url('blog/static-middleman-page-dynamic-react-admin-panel-and-heroku-redeployments/preview.jpg'),
    preview: "How and why I built a dynamic Admin Panel for a static Middleman website.",
  },
  {
    id: "node-development-console",
    title: "Development Console for Node apps",
    image: s3_url('blog/node-development-console/preview.jpg'),
    preview: "Useful, simple and beautiful way of keeping all dependency services in one place.",
  },
  {
    id: "what-kind-of-code-I-want-to-see-in-controllers",
    title: "What kind of code I want to see in Controllers",
    image: s3_url('blog/what-kind-of-code-I-want-to-see-in-controllers/preview.jpg'),
    preview: "How I want to build and work with Rails controllers.",
  },
  {
    id: "why-do-we-write-functions",
    title: "Why Do We Write Functions",
    image: s3_url('blog/why-do-we-write-functions/preview.jpg'),
    preview: "My thoughts on functions, their surroundings and purposes.",
  },
  {
    id: "strategy-pattern-in-ios-app",
    title: "Strategy Pattern In an iOS app",
    image: s3_url('blog/strategy-pattern-in-ios-app/preview.jpg'),
    preview: "Example of a Strategy Pattern I used in one of my app.",
  },
  {
    id: "ddd-middleman-as-view-plugin",
    title: "DDD and Middleman as a Just a View Plugin",
    image: s3_url('blog/ddd-middleman-as-view-plugin/preview.jpg'),
    preview: "Layering your app and applying DDD practices can take place even while working on static pages. In fact, by doing so, presentation mechanism is fully swappable making Middleman just a detail.",
  },
  {
    id: "living-css-styleguides",
    title: "Living CSS styleguides",
    image: s3_url('blog/living-css-styleguides/preview.jpg'),
    preview: "Setup, reason, joy and consequences of having a CSS Styleguides in a bigger styling codebase.",
  },
  {
    id: "observers-as-objects-communication-channel",
    title: "Observers as an Objects communication channel",
    image: s3_url('blog/observers-as-objects-communication-channel/preview.jpg'),
    preview: "Observer Pattern is extremely handy way to implement communication channel between objects.",
  },
  {
    id: "rails-view-layer",
    title: "Introducing View Layer to Rails App",
    image: s3_url('blog/rails-view-layer/preview.jpg'),
    preview: "With an introduction of separate view layer to Rails applications, view logic has finally its own place and can be driven by OOP rules.",
  },
  {
    id: "storing-map-data-as-image",
    title: "Storing Map data as an Image",
    image: s3_url('blog/storing-map-data-as-image/preview.jpg'),
    preview: "How, after evaluating many options, how to store map data I decided to go with quite innovative solution.",
  },
  {
    id: "only-one-valid-use-of-rails-default-scope",
    title: "The only one valid use of Rails default scope",
    image: s3_url('blog/only-one-valid-use-of-rails-default-scope/preview.jpg'),
    preview: "Discussion and an example of the only one valid use of Rails default scope that will not hurt you.",
  },
  {
    id: "mixing-view-functionality",
    title: "Mixing View Related Functionality",
    image: s3_url('blog/mixing-view-functionality/preview.jpg'),
    preview: "Providing an additional functionality to an object can be done by mixing a ruby module. I used this approach to add view formatting to a model object.",
  },
  {
    id: "running-web-background-worker-on-single-dyno",
    title: "Running Web/Background Worker on a single Dyno",
    image: s3_url('blog/running-web-background-worker-on-single-dyno/preview.jpg'),
    preview: "On how to reduce costs by removing background worker and running additional async code on webapp process.",
  },
].to_json
%>